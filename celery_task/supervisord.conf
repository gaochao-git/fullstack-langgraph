[unix_http_server]
file=/tmp/supervisor.sock   ; socket 文件路径
chmod=0700                  ; socket 文件权限

[supervisord]
logfile=/tmp/supervisord.log ; 主日志文件
logfile_maxbytes=50MB       ; 日志文件大小限制
logfile_backups=10          ; 日志文件备份数量
loglevel=info               ; 日志级别
pidfile=/tmp/supervisord.pid ; PID 文件
nodaemon=false              ; 是否在前台运行
minfds=1024                 ; 最小文件描述符数量
minprocs=200                ; 最小进程数量

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; 连接supervisor的URL

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; ==================== Celery Beat 进程 ====================
[program:celery-beat]
command=python run_beat.py                    ; 启动命令
directory=/Users/gaochao/gaochao-git/gaochao_repo/fullstack-langgraph/celery_task  ; 工作目录
user=gaochao                                  ; 运行用户
numprocs=1                                    ; 进程数量
stdout_logfile=/tmp/celery-beat.log          ; 标准输出日志
stderr_logfile=/tmp/celery-beat-error.log    ; 错误输出日志
autostart=true                               ; 自动启动
autorestart=true                             ; 自动重启
startsecs=10                                 ; 启动10秒后才认为启动成功
stopwaitsecs=60                              ; 停止等待时间
killasgroup=true                             ; 杀死整个进程组
stopasgroup=true                             ; 停止整个进程组
priority=999                                 ; 启动优先级

; ==================== Celery Worker 进程 ====================
[program:celery-worker]
command=python run_worker.py                 ; 启动命令
directory=/Users/gaochao/gaochao-git/gaochao_repo/fullstack-langgraph/celery_task  ; 工作目录
user=gaochao                                 ; 运行用户
numprocs=1                                   ; 进程数量
stdout_logfile=/tmp/celery-worker.log        ; 标准输出日志
stderr_logfile=/tmp/celery-worker-error.log  ; 错误输出日志
autostart=true                               ; 自动启动
autorestart=true                             ; 自动重启
startsecs=10                                 ; 启动10秒后才认为启动成功
stopwaitsecs=60                              ; 停止等待时间
killasgroup=true                             ; 杀死整个进程组
stopasgroup=true                             ; 停止整个进程组
priority=998                                 ; 启动优先级(比beat高)

; ==================== 进程组配置 ====================
[group:celery]
programs=celery-beat,celery-worker           ; 包含的程序
priority=999                                 ; 组优先级