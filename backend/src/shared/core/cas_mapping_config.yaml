# CAS 属性映射配置
# 将 CAS 返回的属性映射到 rbac_users 表结构

cas_attribute_mapping:
  # 直接映射 - CAS属性名 -> 数据库字段名
  direct_mapping:
    username: user_name        # CAS的username -> 表的user_name
    display_name: display_name  # CAS的display_name -> 表的display_name  
    email: email               # CAS的email -> 表的email
    
  # 从 group_name 解析部门和团队信息
  # 示例: CN=张三,OU=开发组,OU=技术部,OU=淘宝,DC=taobao,DC=COM
  group_name_parsing:
    enabled: true
    parser_type: CAS_dn
    rules:
      # 从 CAS DN 中提取信息
      - type: "CN"
        index: 0
        target: "display_name_backup"  # 作为 display_name 的备用
      - type: "OU"  
        index: 0
        target: "group_name"      # 第1个OU -> 团队名称(开发组)
      - type: "OU"
        index: 1  
        target: "department_name"  # 第2个OU -> 部门名称(技术部)
        
  # 字段生成规则
  field_generation:
    user_id:
      # user_id 生成策略
      strategy: "prefix_username"  # prefix_username | uuid | cas_uid
      prefix: "cas_"
      # 示例: cas_zhangsan
      
  # 默认值和固定值
  defaults:
    mobile: ""          # 手机号默认为空
    user_source: 1      # 1=CAS来源
    is_active: 1        # 默认激活
    is_deleted: 0       # 默认未删除
    create_by: "CAS"    # 创建者
    update_by: "CAS"    # 更新者
    
  # 字段验证规则
  validation:
    user_name:
      required: true
      max_length: 50
    email:
      required: true
      pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    department_name:
      max_length: 50
      default_if_empty: "未分配部门"
    group_name:
      max_length: 50
      default_if_empty: "未分配团队"

# 数据转换示例
# CAS 返回的属性:
# {
#   "username": "zhangsan",
#   "display_name": "张三",
#   "email": "zhangsan@taobao.com",
#   "group_name": "CN=张三,OU=开发组,OU=技术部,OU=淘宝,DC=taobao,DC=COM"
# }
#
# 转换后存入数据库:
# {
#   "user_id": "cas_zhangsan",
#   "user_name": "zhangsan",
#   "display_name": "张三",
#   "department_name": "技术部",
#   "group_name": "开发组",
#   "email": "zhangsan@taobao.com",
#   "mobile": "",
#   "user_source": 1,
#   "is_active": 1,
#   "is_deleted": 0,
#   "create_by": "CAS",
#   "update_by": "CAS"
# }